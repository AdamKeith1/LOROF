; SMT-LIBv2 description generated by Yosys 0.49+1 (git sha1 4a27d93b0, x86_64-apple-darwin23.5-clang++ 18.1.8 -fPIC -O3)
; yosys-smt2-module progctr
(declare-sort |progctr_s| 0)
(declare-fun |progctr_is| (|progctr_s|) Bool)
; yosys-smt2-anyinit progctr#0 5 progctr.sv:16.5-22.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_24"], "smtname": 0, "smtoffset": 0, "type": "init", "width": 5}
(declare-fun |progctr#0| (|progctr_s|) (_ BitVec 5)) ; \_witness_.anyinit_procdff_24
(declare-fun |progctr#1| (|progctr_s|) (_ BitVec 1)) ; \n_rst
(define-fun |progctr#2| ((state |progctr_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|progctr#1| state)) #b1) (|progctr#0| state) #b00000)) ; \pc_reg
; yosys-smt2-wire pc_reg 5
(define-fun |progctr_n pc_reg| ((state |progctr_s|)) (_ BitVec 5) (|progctr#2| state))
; yosys-smt2-output pc 5
; yosys-smt2-wire pc 5
(define-fun |progctr_n pc| ((state |progctr_s|)) (_ BitVec 5) (|progctr#2| state))
(define-fun |progctr#3| ((state |progctr_s|)) (_ BitVec 5) (bvadd (|progctr#2| state) #b00001)) ; $add$progctr.sv:33$6_Y
(define-fun |progctr#4| ((state |progctr_s|)) Bool (= (|progctr#2| state) #b11111)) ; $eq$progctr.sv:30$5_Y
(define-fun |progctr#5| ((state |progctr_s|)) (_ BitVec 5) (ite (|progctr#4| state) #b00000 (|progctr#3| state))) ; $2\nxt_pc_reg[4:0]
(declare-fun |progctr#6| (|progctr_s|) (_ BitVec 1)) ; \count_en
(define-fun |progctr#7| ((state |progctr_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|progctr#6| state)) #b1) (|progctr#5| state) (|progctr#2| state))) ; \nxt_pc_reg
; yosys-smt2-wire nxt_pc_reg 5
(define-fun |progctr_n nxt_pc_reg| ((state |progctr_s|)) (_ BitVec 5) (|progctr#7| state))
; yosys-smt2-input n_rst 1
; yosys-smt2-wire n_rst 1
; yosys-smt2-witness {"offset": 0, "path": ["\\n_rst"], "smtname": "n_rst", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |progctr_n n_rst| ((state |progctr_s|)) Bool (= ((_ extract 0 0) (|progctr#1| state)) #b1))
; yosys-smt2-input count_en 1
; yosys-smt2-wire count_en 1
; yosys-smt2-witness {"offset": 0, "path": ["\\count_en"], "smtname": "count_en", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |progctr_n count_en| ((state |progctr_s|)) Bool (= ((_ extract 0 0) (|progctr#6| state)) #b1))
(declare-fun |progctr#8| (|progctr_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |progctr_n clk| ((state |progctr_s|)) Bool (|progctr#8| state))
(define-fun |progctr#9| ((state |progctr_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|progctr#1| state)) #b1) #b1 #b0)) ; \a_max_count_EN
; yosys-smt2-wire a_max_count_EN 1
(define-fun |progctr_n a_max_count_EN| ((state |progctr_s|)) Bool (= ((_ extract 0 0) (|progctr#9| state)) #b1))
; yosys-smt2-register _witness_.anyinit_procdff_24 5
; yosys-smt2-wire _witness_.anyinit_procdff_24 5
(define-fun |progctr_n _witness_.anyinit_procdff_24| ((state |progctr_s|)) (_ BitVec 5) (|progctr#0| state))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:110:execute$30"], "smtname": 10, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |progctr#10| (|progctr_s|) (_ BitVec 1)) ; $auto$async2sync.cc:110:execute$30
; yosys-smt2-register $auto$async2sync.cc:110:execute$30 1
(define-fun |progctr_n $auto$async2sync.cc:110:execute$30| ((state |progctr_s|)) Bool (= ((_ extract 0 0) (|progctr#10| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:101:execute$26"], "smtname": 11, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |progctr#11| (|progctr_s|) (_ BitVec 1)) ; $auto$async2sync.cc:101:execute$26
; yosys-smt2-register $auto$async2sync.cc:101:execute$26 1
(define-fun |progctr_n $auto$async2sync.cc:101:execute$26| ((state |progctr_s|)) Bool (= ((_ extract 0 0) (|progctr#11| state)) #b1))
(define-fun |progctr#12| ((state |progctr_s|)) (_ BitVec 1) (bvnot (ite (|progctr#8| state) #b1 #b0))) ; $auto$rtlil.cc:2739:Not$44
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$45
(define-fun |progctr_u 0| ((state |progctr_s|)) Bool (or (= ((_ extract 0 0) (|progctr#12| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$45
; yosys-smt2-assert 0 a_max_count
(define-fun |progctr_a 0| ((state |progctr_s|)) Bool (or (= ((_ extract 0 0) (|progctr#10| state)) #b1) (not (= ((_ extract 0 0) (|progctr#11| state)) #b1)))) ; a_max_count
(define-fun |progctr#13| ((state |progctr_s|)) Bool (bvule (|progctr#2| state) #b11111)) ; $le$progctr.sv:45$8_Y
(define-fun |progctr#14| ((state |progctr_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|progctr#1| state)) #b1) (|progctr#7| state) #b00000)) ; $auto$rtlil.cc:2874:Mux$40
(define-fun |progctr_a| ((state |progctr_s|)) Bool 
  (|progctr_a 0| state)
)
(define-fun |progctr_u| ((state |progctr_s|)) Bool 
  (|progctr_u 0| state)
)
(define-fun |progctr_i| ((state |progctr_s|)) Bool (and
  (= (= ((_ extract 0 0) (|progctr#10| state)) #b1) true) ; $auto$async2sync.cc:110:execute$30
  (= (= ((_ extract 0 0) (|progctr#11| state)) #b1) false) ; $auto$async2sync.cc:101:execute$26
))
(define-fun |progctr_h| ((state |progctr_s|)) Bool true)
(define-fun |progctr_t| ((state |progctr_s|) (next_state |progctr_s|)) Bool (and
  (= (|progctr#9| state) (|progctr#11| next_state)) ; $auto$async2sync.cc:104:execute$28 $auto$async2sync.cc:101:execute$26
  (= (ite (|progctr#13| state) #b1 #b0) (|progctr#10| next_state)) ; $auto$async2sync.cc:112:execute$31 $auto$async2sync.cc:110:execute$30
  (= (|progctr#14| state) (|progctr#0| next_state)) ; $procdff$24 \_witness_.anyinit_procdff_24
)) ; end of module progctr
; yosys-smt2-topmod progctr
; end of yosys output
